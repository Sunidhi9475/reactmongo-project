{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sunid\\\\Desktop\\\\cc - Copy\\\\my-app\\\\src\\\\PatientManagement.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import './PatientManagement.css'; // Import CSS file\n\n// // function PatientManagement() {\n// //   // State to manage patients\n// //   const [patients, setPatients] = useState([]);\n// //   // State to track the index of the patient being edited\n// //   const [editIndex, setEditIndex] = useState(null);\n// //   // State to track patient details for editing\n// //   const [editedPatient, setEditedPatient] = useState({\n// //     name: '',\n// //     age: '',\n// //     gender: '',\n// //     appointment: '',\n// //     phone: '',\n// //     disease: '',\n// //     doctorName: '',\n// //     address: '',\n// //     status: ''\n// //   });\n\n// //   // Function to add a new patient\n// //   const addPatient = (patient) => {\n// //     setPatients([...patients, patient]);\n// //   };\n\n// //   // Function to delete a patient\n// //   const deletePatient = (index) => {\n// //     const updatedPatients = [...patients];\n// //     updatedPatients.splice(index, 1);\n// //     setPatients(updatedPatients);\n// //   };\n\n// //   // Function to edit a patient\n// //   const editPatient = (index) => {\n// //     setEditIndex(index);\n// //     setEditedPatient(patients[index]);\n// //   };\n\n// //   // Function to update a patient\n// //   const updatePatient = (index, updatedPatient) => {\n// //     const updatedPatients = [...patients];\n// //     updatedPatients[index] = updatedPatient;\n// //     setPatients(updatedPatients);\n// //     setEditIndex(null);\n// //     setEditedPatient({\n// //       name: '',\n// //       age: '',\n// //       gender: '',\n// //       appointment: '',\n// //       phone: '',\n// //       disease: '',\n// //       doctorName: '',\n// //       address: '',\n// //       status: ''\n// //     });\n// //   };\n\n// //   return (\n// //     <div className=\"patient-management\">\n// //       <h2>Patient Management</h2>\n// //       {/* Form to add or edit patient */}\n// //       <form onSubmit={(e) => {\n// //         e.preventDefault();\n// //         if (editIndex !== null) {\n// //           updatePatient(editIndex, editedPatient);\n// //         } else {\n// //           addPatient(editedPatient);\n// //         }\n// //       }}>\n// //         <input type=\"text\" name=\"name\" placeholder=\"Name\" required value={editedPatient.name} onChange={(e) => setEditedPatient({...editedPatient, name: e.target.value})} />\n// //         <input type=\"number\" name=\"age\" placeholder=\"Age\" required value={editedPatient.age} onChange={(e) => setEditedPatient({...editedPatient, age: e.target.value})} />\n// //         <select name=\"gender\" required value={editedPatient.gender} onChange={(e) => setEditedPatient({...editedPatient, gender: e.target.value})}>\n// //           <option value=\"\">Select Gender</option>\n// //           <option value=\"Male\">Male</option>\n// //           <option value=\"Female\">Female</option>\n// //           <option value=\"Other\">Other</option>\n// //         </select>\n// //         <input type=\"date\" name=\"appointment\" placeholder=\"Appointment Date\" required value={editedPatient.appointment} onChange={(e) => setEditedPatient({...editedPatient, appointment: e.target.value})} />\n// //         <input type=\"tel\" name=\"phone\" placeholder=\"Phone\" required value={editedPatient.phone} onChange={(e) => setEditedPatient({...editedPatient, phone: e.target.value})} />\n// //         <input type=\"text\" name=\"disease\" placeholder=\"Disease\" required value={editedPatient.disease} onChange={(e) => setEditedPatient({...editedPatient, disease: e.target.value})} />\n// //         <input type=\"text\" name=\"doctorName\" placeholder=\"Doctor Name\" required value={editedPatient.doctorName} onChange={(e) => setEditedPatient({...editedPatient, doctorName: e.target.value})} />\n// //         <input type=\"text\" name=\"address\" placeholder=\"Address\" required value={editedPatient.address} onChange={(e) => setEditedPatient({...editedPatient, address: e.target.value})} />\n// //         <select name=\"status\" required value={editedPatient.status} onChange={(e) => setEditedPatient({...editedPatient, status: e.target.value})}>\n// //           <option value=\"\">Select Status</option>\n// //           <option value=\"Active\">Active</option>\n// //           <option value=\"Inactive\">Inactive</option>\n// //           <option value=\"Pending\">Pending</option>\n// //         </select>\n// //         <button type=\"submit\">{editIndex !== null ? 'Update' : 'Add'} Patient</button>\n// //       </form>\n// //       {/* List of patients */}\n// //       <table>\n// //         <thead>\n// //           <tr>\n// //             <th>Name</th>\n// //             <th>Age</th>\n// //             <th>Gender</th>\n// //             <th>Appointment</th>\n// //             <th>Phone</th>\n// //             <th>Disease</th>\n// //             <th>Doctor Name</th>\n// //             <th>Address</th>\n// //             <th>Status</th>\n// //             <th>Action</th>\n// //           </tr>\n// //         </thead>\n// //         <tbody>\n// //           {patients.map((patient, index) => (\n// //             <tr key={index}>\n// //               <td>{patient.name}</td>\n// //               <td>{patient.age}</td>\n// //               <td>{patient.gender}</td>\n// //               <td>{patient.appointment}</td>\n// //               <td>{patient.phone}</td>\n// //               <td>{patient.disease}</td>\n// //               <td>{patient.doctorName}</td>\n// //               <td>{patient.address}</td>\n// //               <td>{patient.status}</td>\n// //               <td>\n// //                 <button onClick={() => deletePatient(index)}>Delete</button>\n// //                 <button onClick={() => editPatient(index)}>Edit</button>\n// //               </td>\n// //             </tr>\n// //           ))}\n// //         </tbody>\n// //       </table>\n// //     </div>\n// //   );\n// // }\n\n// // export default PatientManagement;\n// import React, { useState, useEffect } from 'react';\n// import './PatientManagement.css';\n// import axios from 'axios';\n\n// function PatientManagement() {\n//   const [patients, setPatients] = useState([]);\n//   const [editedPatient, setEditedPatient] = useState({\n//     name: '',\n//     age: '',\n//     gender: '',\n//     appointment: '',\n//     phone: '',\n//     disease: '',\n//     doctorName: '',\n//     address: '',\n//     status: ''\n//   });\n\n//   useEffect(() => {\n//     fetchPatients();\n//   }, []);\n\n//   const fetchPatients = async () => {\n//     try {\n//       const response = await axios.get('/api/patients');\n//       setPatients(response.data);\n//     } catch (error) {\n//       console.error('Error fetching patients:', error);\n//     }\n//   };\n\n//   const addPatient = async () => {\n//     try {\n//       const response = await axios.post('/api/patients', editedPatient);\n//       setPatients([...patients, response.data]);\n//       setEditedPatient({\n//         name: '',\n//         age: '',\n//         gender: '',\n//         appointment: '',\n//         phone: '',\n//         disease: '',\n//         doctorName: '',\n//         address: '',\n//         status: ''\n//       });\n//     } catch (error) {\n//       console.error('Error adding patient:', error);\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     setEditedPatient({ ...editedPatient, [e.target.name]: e.target.value });\n//   };\n\n//   return (\n//     <div className=\"patient-management\">\n//       <h2>Patient Management</h2>\n//       <form onSubmit={(e) => {\n//         e.preventDefault();\n//         addPatient();\n//       }}>\n//         {/* Input fields */}\n//         <button type=\"submit\">Add Patient</button>\n//       </form>\n//       <table>\n//         <thead>\n//           <tr>\n//             {/* Table headers */}\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {patients.map((patient, index) => (\n//             <tr key={index}>\n//               {/* Table data */}\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// export default PatientManagement;\nimport React, { useState, useEffect } from 'react';\nimport './PatientManagement.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientManagement() {\n  _s();\n  const [patients, setPatients] = useState([]);\n  const [editedPatient, setEditedPatient] = useState({\n    name: '',\n    age: '',\n    gender: '',\n    appointment: '',\n    phone: '',\n    disease: '',\n    doctorName: '',\n    address: '',\n    status: ''\n  });\n  useEffect(() => {\n    fetchPatients();\n  }, []);\n  const fetchPatients = async () => {\n    try {\n      const response = await axios.get('/api/patients');\n      setPatients(response.data);\n    } catch (error) {\n      console.error('Error fetching patients:', error);\n    }\n  };\n  const addPatient = async () => {\n    try {\n      const response = await axios.post('/api/patients', editedPatient);\n      setPatients([...patients, response.data]);\n      setEditedPatient({\n        name: '',\n        age: '',\n        gender: '',\n        appointment: '',\n        phone: '',\n        disease: '',\n        doctorName: '',\n        address: '',\n        status: ''\n      });\n    } catch (error) {\n      console.error('Error adding patient:', error);\n    }\n  };\n  const handleChange = e => {\n    setEditedPatient({\n      ...editedPatient,\n      [e.target.name]: e.target.value\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"patient-management\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Patient Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        addPatient();\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Name\",\n        required: true,\n        value: editedPatient.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"age\",\n        placeholder: \"Age\",\n        required: true,\n        value: editedPatient.age,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"gender\",\n        required: true,\n        value: editedPatient.gender,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Gender\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Male\",\n          children: \"Male\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Female\",\n          children: \"Female\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Other\",\n          children: \"Other\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"appointment\",\n        placeholder: \"Appointment Date\",\n        required: true,\n        value: editedPatient.appointment,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"phone\",\n        placeholder: \"Phone\",\n        required: true,\n        value: editedPatient.phone,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"disease\",\n        placeholder: \"Disease\",\n        required: true,\n        value: editedPatient.disease,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"doctorName\",\n        placeholder: \"Doctor Name\",\n        required: true,\n        value: editedPatient.doctorName,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"address\",\n        placeholder: \"Address\",\n        required: true,\n        value: editedPatient.address,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"status\",\n        required: true,\n        value: editedPatient.status,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Active\",\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Inactive\",\n          children: \"Inactive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Pending\",\n          children: \"Pending\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Gender\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Appointment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Disease\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \" Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: patients.map((patient, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.age\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.gender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.appointment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.disease\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.doctorName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: patient.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 273,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientManagement, \"hk1rjP8J2m++GspAcdGbqshlNZA=\");\n_c = PatientManagement;\nexport default PatientManagement;\nvar _c;\n$RefreshReg$(_c, \"PatientManagement\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PatientManagement","_s","patients","setPatients","editedPatient","setEditedPatient","name","age","gender","appointment","phone","disease","doctorName","address","status","fetchPatients","response","get","data","error","console","addPatient","post","handleChange","e","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","preventDefault","type","placeholder","required","onChange","map","patient","index","_c","$RefreshReg$"],"sources":["C:/Users/sunid/Desktop/cc - Copy/my-app/src/PatientManagement.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import './PatientManagement.css'; // Import CSS file\r\n\r\n// // function PatientManagement() {\r\n// //   // State to manage patients\r\n// //   const [patients, setPatients] = useState([]);\r\n// //   // State to track the index of the patient being edited\r\n// //   const [editIndex, setEditIndex] = useState(null);\r\n// //   // State to track patient details for editing\r\n// //   const [editedPatient, setEditedPatient] = useState({\r\n// //     name: '',\r\n// //     age: '',\r\n// //     gender: '',\r\n// //     appointment: '',\r\n// //     phone: '',\r\n// //     disease: '',\r\n// //     doctorName: '',\r\n// //     address: '',\r\n// //     status: ''\r\n// //   });\r\n\r\n// //   // Function to add a new patient\r\n// //   const addPatient = (patient) => {\r\n// //     setPatients([...patients, patient]);\r\n// //   };\r\n\r\n// //   // Function to delete a patient\r\n// //   const deletePatient = (index) => {\r\n// //     const updatedPatients = [...patients];\r\n// //     updatedPatients.splice(index, 1);\r\n// //     setPatients(updatedPatients);\r\n// //   };\r\n\r\n// //   // Function to edit a patient\r\n// //   const editPatient = (index) => {\r\n// //     setEditIndex(index);\r\n// //     setEditedPatient(patients[index]);\r\n// //   };\r\n\r\n// //   // Function to update a patient\r\n// //   const updatePatient = (index, updatedPatient) => {\r\n// //     const updatedPatients = [...patients];\r\n// //     updatedPatients[index] = updatedPatient;\r\n// //     setPatients(updatedPatients);\r\n// //     setEditIndex(null);\r\n// //     setEditedPatient({\r\n// //       name: '',\r\n// //       age: '',\r\n// //       gender: '',\r\n// //       appointment: '',\r\n// //       phone: '',\r\n// //       disease: '',\r\n// //       doctorName: '',\r\n// //       address: '',\r\n// //       status: ''\r\n// //     });\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"patient-management\">\r\n// //       <h2>Patient Management</h2>\r\n// //       {/* Form to add or edit patient */}\r\n// //       <form onSubmit={(e) => {\r\n// //         e.preventDefault();\r\n// //         if (editIndex !== null) {\r\n// //           updatePatient(editIndex, editedPatient);\r\n// //         } else {\r\n// //           addPatient(editedPatient);\r\n// //         }\r\n// //       }}>\r\n// //         <input type=\"text\" name=\"name\" placeholder=\"Name\" required value={editedPatient.name} onChange={(e) => setEditedPatient({...editedPatient, name: e.target.value})} />\r\n// //         <input type=\"number\" name=\"age\" placeholder=\"Age\" required value={editedPatient.age} onChange={(e) => setEditedPatient({...editedPatient, age: e.target.value})} />\r\n// //         <select name=\"gender\" required value={editedPatient.gender} onChange={(e) => setEditedPatient({...editedPatient, gender: e.target.value})}>\r\n// //           <option value=\"\">Select Gender</option>\r\n// //           <option value=\"Male\">Male</option>\r\n// //           <option value=\"Female\">Female</option>\r\n// //           <option value=\"Other\">Other</option>\r\n// //         </select>\r\n// //         <input type=\"date\" name=\"appointment\" placeholder=\"Appointment Date\" required value={editedPatient.appointment} onChange={(e) => setEditedPatient({...editedPatient, appointment: e.target.value})} />\r\n// //         <input type=\"tel\" name=\"phone\" placeholder=\"Phone\" required value={editedPatient.phone} onChange={(e) => setEditedPatient({...editedPatient, phone: e.target.value})} />\r\n// //         <input type=\"text\" name=\"disease\" placeholder=\"Disease\" required value={editedPatient.disease} onChange={(e) => setEditedPatient({...editedPatient, disease: e.target.value})} />\r\n// //         <input type=\"text\" name=\"doctorName\" placeholder=\"Doctor Name\" required value={editedPatient.doctorName} onChange={(e) => setEditedPatient({...editedPatient, doctorName: e.target.value})} />\r\n// //         <input type=\"text\" name=\"address\" placeholder=\"Address\" required value={editedPatient.address} onChange={(e) => setEditedPatient({...editedPatient, address: e.target.value})} />\r\n// //         <select name=\"status\" required value={editedPatient.status} onChange={(e) => setEditedPatient({...editedPatient, status: e.target.value})}>\r\n// //           <option value=\"\">Select Status</option>\r\n// //           <option value=\"Active\">Active</option>\r\n// //           <option value=\"Inactive\">Inactive</option>\r\n// //           <option value=\"Pending\">Pending</option>\r\n// //         </select>\r\n// //         <button type=\"submit\">{editIndex !== null ? 'Update' : 'Add'} Patient</button>\r\n// //       </form>\r\n// //       {/* List of patients */}\r\n// //       <table>\r\n// //         <thead>\r\n// //           <tr>\r\n// //             <th>Name</th>\r\n// //             <th>Age</th>\r\n// //             <th>Gender</th>\r\n// //             <th>Appointment</th>\r\n// //             <th>Phone</th>\r\n// //             <th>Disease</th>\r\n// //             <th>Doctor Name</th>\r\n// //             <th>Address</th>\r\n// //             <th>Status</th>\r\n// //             <th>Action</th>\r\n// //           </tr>\r\n// //         </thead>\r\n// //         <tbody>\r\n// //           {patients.map((patient, index) => (\r\n// //             <tr key={index}>\r\n// //               <td>{patient.name}</td>\r\n// //               <td>{patient.age}</td>\r\n// //               <td>{patient.gender}</td>\r\n// //               <td>{patient.appointment}</td>\r\n// //               <td>{patient.phone}</td>\r\n// //               <td>{patient.disease}</td>\r\n// //               <td>{patient.doctorName}</td>\r\n// //               <td>{patient.address}</td>\r\n// //               <td>{patient.status}</td>\r\n// //               <td>\r\n// //                 <button onClick={() => deletePatient(index)}>Delete</button>\r\n// //                 <button onClick={() => editPatient(index)}>Edit</button>\r\n// //               </td>\r\n// //             </tr>\r\n// //           ))}\r\n// //         </tbody>\r\n// //       </table>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default PatientManagement;\r\n// import React, { useState, useEffect } from 'react';\r\n// import './PatientManagement.css';\r\n// import axios from 'axios';\r\n\r\n// function PatientManagement() {\r\n//   const [patients, setPatients] = useState([]);\r\n//   const [editedPatient, setEditedPatient] = useState({\r\n//     name: '',\r\n//     age: '',\r\n//     gender: '',\r\n//     appointment: '',\r\n//     phone: '',\r\n//     disease: '',\r\n//     doctorName: '',\r\n//     address: '',\r\n//     status: ''\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     fetchPatients();\r\n//   }, []);\r\n\r\n//   const fetchPatients = async () => {\r\n//     try {\r\n//       const response = await axios.get('/api/patients');\r\n//       setPatients(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching patients:', error);\r\n//     }\r\n//   };\r\n\r\n//   const addPatient = async () => {\r\n//     try {\r\n//       const response = await axios.post('/api/patients', editedPatient);\r\n//       setPatients([...patients, response.data]);\r\n//       setEditedPatient({\r\n//         name: '',\r\n//         age: '',\r\n//         gender: '',\r\n//         appointment: '',\r\n//         phone: '',\r\n//         disease: '',\r\n//         doctorName: '',\r\n//         address: '',\r\n//         status: ''\r\n//       });\r\n//     } catch (error) {\r\n//       console.error('Error adding patient:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     setEditedPatient({ ...editedPatient, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"patient-management\">\r\n//       <h2>Patient Management</h2>\r\n//       <form onSubmit={(e) => {\r\n//         e.preventDefault();\r\n//         addPatient();\r\n//       }}>\r\n//         {/* Input fields */}\r\n//         <button type=\"submit\">Add Patient</button>\r\n//       </form>\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             {/* Table headers */}\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {patients.map((patient, index) => (\r\n//             <tr key={index}>\r\n//               {/* Table data */}\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default PatientManagement;\r\nimport React, { useState, useEffect } from 'react';\r\nimport './PatientManagement.css';\r\nimport axios from 'axios';\r\n\r\nfunction PatientManagement() {\r\n  const [patients, setPatients] = useState([]);\r\n  const [editedPatient, setEditedPatient] = useState({\r\n    name: '',\r\n    age: '',\r\n    gender: '',\r\n    appointment: '',\r\n    phone: '',\r\n    disease: '',\r\n    doctorName: '',\r\n    address: '',\r\n    status: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchPatients();\r\n  }, []);\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const response = await axios.get('/api/patients');\r\n      setPatients(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching patients:', error);\r\n    }\r\n  };\r\n\r\n  const addPatient = async () => {\r\n    try {\r\n      const response = await axios.post('/api/patients', editedPatient);\r\n      setPatients([...patients, response.data]);\r\n      setEditedPatient({\r\n        name: '',\r\n        age: '',\r\n        gender: '',\r\n        appointment: '',\r\n        phone: '',\r\n        disease: '',\r\n        doctorName: '',\r\n        address: '',\r\n        status: ''\r\n      });\r\n    } catch (error) {\r\n      console.error('Error adding patient:', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setEditedPatient({ ...editedPatient, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <div className=\"patient-management\">\r\n      <h2>Patient Management</h2>\r\n      <form onSubmit={(e) => {\r\n        e.preventDefault();\r\n        addPatient();\r\n      }}>\r\n        <input type=\"text\" name=\"name\" placeholder=\"Name\" required value={editedPatient.name} onChange={handleChange} />\r\n        <input type=\"number\" name=\"age\" placeholder=\"Age\" required value={editedPatient.age} onChange={handleChange} />\r\n        <select name=\"gender\" required value={editedPatient.gender} onChange={handleChange}>\r\n          <option value=\"\">Select Gender</option>\r\n          <option value=\"Male\">Male</option>\r\n          <option value=\"Female\">Female</option>\r\n          <option value=\"Other\">Other</option>\r\n        </select>\r\n        <input type=\"date\" name=\"appointment\" placeholder=\"Appointment Date\" required value={editedPatient.appointment} onChange={handleChange} />\r\n        <input type=\"tel\" name=\"phone\" placeholder=\"Phone\" required value={editedPatient.phone} onChange={handleChange} />\r\n        <input type=\"text\" name=\"disease\" placeholder=\"Disease\" required value={editedPatient.disease} onChange={handleChange} />\r\n        <input type=\"text\" name=\"doctorName\" placeholder=\"Doctor Name\" required value={editedPatient.doctorName} onChange={handleChange} />\r\n        <input type=\"text\" name=\"address\" placeholder=\"Address\" required value={editedPatient.address} onChange={handleChange} />\r\n        <select name=\"status\" required value={editedPatient.status} onChange={handleChange}>\r\n          <option value=\"\">Select Status</option>\r\n          <option value=\"Active\">Active</option>\r\n          <option value=\"Inactive\">Inactive</option>\r\n          <option value=\"Pending\">Pending</option>\r\n        </select>\r\n        <button type=\"submit\">Add Patient</button>\r\n      </form>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Age</th>\r\n            <th>Gender</th>\r\n            <th>Appointment</th>\r\n            <th>Phone</th>\r\n            <th>Disease</th>\r\n            <th> Name</th>\r\n            <th>Address</th>\r\n            <th>Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {patients.map((patient, index) => (\r\n            <tr key={index}>\r\n              <td>{patient.name}</td>\r\n              <td>{patient.age}</td>\r\n              <td>{patient.gender}</td>\r\n              <td>{patient.appointment}</td>\r\n              <td>{patient.phone}</td>\r\n              <td>{patient.disease}</td>\r\n              <td>{patient.doctorName}</td>\r\n              <td>{patient.address}</td>\r\n              <td>{patient.status}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientManagement;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}