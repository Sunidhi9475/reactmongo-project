{"ast":null,"code":"// // import React, { useState } from 'react';\n// // import './PatientManagement.css'; // Import CSS file\n\n// // function PatientManagement() {\n// //   // State to manage patients\n// //   const [patients, setPatients] = useState([]);\n// //   // State to track the index of the patient being edited\n// //   const [editIndex, setEditIndex] = useState(null);\n// //   // State to track patient details for editing\n// //   const [editedPatient, setEditedPatient] = useState({\n// //     name: '',\n// //     age: '',\n// //     gender: '',\n// //     appointment: '',\n// //     phone: '',\n// //     disease: '',\n// //     doctorName: '',\n// //     address: '',\n// //     status: ''\n// //   });\n\n// //   // Function to add a new patient\n// //   const addPatient = (patient) => {\n// //     setPatients([...patients, patient]);\n// //   };\n\n// //   // Function to delete a patient\n// //   const deletePatient = (index) => {\n// //     const updatedPatients = [...patients];\n// //     updatedPatients.splice(index, 1);\n// //     setPatients(updatedPatients);\n// //   };\n\n// //   // Function to edit a patient\n// //   const editPatient = (index) => {\n// //     setEditIndex(index);\n// //     setEditedPatient(patients[index]);\n// //   };\n\n// //   // Function to update a patient\n// //   const updatePatient = (index, updatedPatient) => {\n// //     const updatedPatients = [...patients];\n// //     updatedPatients[index] = updatedPatient;\n// //     setPatients(updatedPatients);\n// //     setEditIndex(null);\n// //     setEditedPatient({\n// //       name: '',\n// //       age: '',\n// //       gender: '',\n// //       appointment: '',\n// //       phone: '',\n// //       disease: '',\n// //       doctorName: '',\n// //       address: '',\n// //       status: ''\n// //     });\n// //   };\n\n// //   return (\n// //     <div className=\"patient-management\">\n// //       <h2>Patient Management</h2>\n// //       {/* Form to add or edit patient */}\n// //       <form onSubmit={(e) => {\n// //         e.preventDefault();\n// //         if (editIndex !== null) {\n// //           updatePatient(editIndex, editedPatient);\n// //         } else {\n// //           addPatient(editedPatient);\n// //         }\n// //       }}>\n// //         <input type=\"text\" name=\"name\" placeholder=\"Name\" required value={editedPatient.name} onChange={(e) => setEditedPatient({...editedPatient, name: e.target.value})} />\n// //         <input type=\"number\" name=\"age\" placeholder=\"Age\" required value={editedPatient.age} onChange={(e) => setEditedPatient({...editedPatient, age: e.target.value})} />\n// //         <select name=\"gender\" required value={editedPatient.gender} onChange={(e) => setEditedPatient({...editedPatient, gender: e.target.value})}>\n// //           <option value=\"\">Select Gender</option>\n// //           <option value=\"Male\">Male</option>\n// //           <option value=\"Female\">Female</option>\n// //           <option value=\"Other\">Other</option>\n// //         </select>\n// //         <input type=\"date\" name=\"appointment\" placeholder=\"Appointment Date\" required value={editedPatient.appointment} onChange={(e) => setEditedPatient({...editedPatient, appointment: e.target.value})} />\n// //         <input type=\"tel\" name=\"phone\" placeholder=\"Phone\" required value={editedPatient.phone} onChange={(e) => setEditedPatient({...editedPatient, phone: e.target.value})} />\n// //         <input type=\"text\" name=\"disease\" placeholder=\"Disease\" required value={editedPatient.disease} onChange={(e) => setEditedPatient({...editedPatient, disease: e.target.value})} />\n// //         <input type=\"text\" name=\"doctorName\" placeholder=\"Doctor Name\" required value={editedPatient.doctorName} onChange={(e) => setEditedPatient({...editedPatient, doctorName: e.target.value})} />\n// //         <input type=\"text\" name=\"address\" placeholder=\"Address\" required value={editedPatient.address} onChange={(e) => setEditedPatient({...editedPatient, address: e.target.value})} />\n// //         <select name=\"status\" required value={editedPatient.status} onChange={(e) => setEditedPatient({...editedPatient, status: e.target.value})}>\n// //           <option value=\"\">Select Status</option>\n// //           <option value=\"Active\">Active</option>\n// //           <option value=\"Inactive\">Inactive</option>\n// //           <option value=\"Pending\">Pending</option>\n// //         </select>\n// //         <button type=\"submit\">{editIndex !== null ? 'Update' : 'Add'} Patient</button>\n// //       </form>\n// //       {/* List of patients */}\n// //       <table>\n// //         <thead>\n// //           <tr>\n// //             <th>Name</th>\n// //             <th>Age</th>\n// //             <th>Gender</th>\n// //             <th>Appointment</th>\n// //             <th>Phone</th>\n// //             <th>Disease</th>\n// //             <th>Doctor Name</th>\n// //             <th>Address</th>\n// //             <th>Status</th>\n// //             <th>Action</th>\n// //           </tr>\n// //         </thead>\n// //         <tbody>\n// //           {patients.map((patient, index) => (\n// //             <tr key={index}>\n// //               <td>{patient.name}</td>\n// //               <td>{patient.age}</td>\n// //               <td>{patient.gender}</td>\n// //               <td>{patient.appointment}</td>\n// //               <td>{patient.phone}</td>\n// //               <td>{patient.disease}</td>\n// //               <td>{patient.doctorName}</td>\n// //               <td>{patient.address}</td>\n// //               <td>{patient.status}</td>\n// //               <td>\n// //                 <button onClick={() => deletePatient(index)}>Delete</button>\n// //                 <button onClick={() => editPatient(index)}>Edit</button>\n// //               </td>\n// //             </tr>\n// //           ))}\n// //         </tbody>\n// //       </table>\n// //     </div>\n// //   );\n// // }\n\n// // export default PatientManagement;\n// import React, { useState, useEffect } from 'react';\n// import './PatientManagement.css';\n// import axios from 'axios';\n\n// function PatientManagement() {\n//   const [patients, setPatients] = useState([]);\n//   const [editedPatient, setEditedPatient] = useState({\n//     name: '',\n//     age: '',\n//     gender: '',\n//     appointment: '',\n//     phone: '',\n//     disease: '',\n//     doctorName: '',\n//     address: '',\n//     status: ''\n//   });\n\n//   useEffect(() => {\n//     fetchPatients();\n//   }, []);\n\n//   const fetchPatients = async () => {\n//     try {\n//       const response = await axios.get('/api/patients');\n//       setPatients(response.data);\n//     } catch (error) {\n//       console.error('Error fetching patients:', error);\n//     }\n//   };\n\n//   const addPatient = async () => {\n//     try {\n//       const response = await axios.post('/api/patients', editedPatient);\n//       setPatients([...patients, response.data]);\n//       setEditedPatient({\n//         name: '',\n//         age: '',\n//         gender: '',\n//         appointment: '',\n//         phone: '',\n//         disease: '',\n//         doctorName: '',\n//         address: '',\n//         status: ''\n//       });\n//     } catch (error) {\n//       console.error('Error adding patient:', error);\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     setEditedPatient({ ...editedPatient, [e.target.name]: e.target.value });\n//   };\n\n//   return (\n//     <div className=\"patient-management\">\n//       <h2>Patient Management</h2>\n//       <form onSubmit={(e) => {\n//         e.preventDefault();\n//         addPatient();\n//       }}>\n//         {/* Input fields */}\n//         <button type=\"submit\">Add Patient</button>\n//       </form>\n//       <table>\n//         <thead>\n//           <tr>\n//             {/* Table headers */}\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {patients.map((patient, index) => (\n//             <tr key={index}>\n//               {/* Table data */}\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// export default PatientManagement;","map":{"version":3,"names":[],"sources":["C:/Users/sunid/Desktop/cc - Copy/my-app/src/PatientManagement.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import './PatientManagement.css'; // Import CSS file\r\n\r\n// // function PatientManagement() {\r\n// //   // State to manage patients\r\n// //   const [patients, setPatients] = useState([]);\r\n// //   // State to track the index of the patient being edited\r\n// //   const [editIndex, setEditIndex] = useState(null);\r\n// //   // State to track patient details for editing\r\n// //   const [editedPatient, setEditedPatient] = useState({\r\n// //     name: '',\r\n// //     age: '',\r\n// //     gender: '',\r\n// //     appointment: '',\r\n// //     phone: '',\r\n// //     disease: '',\r\n// //     doctorName: '',\r\n// //     address: '',\r\n// //     status: ''\r\n// //   });\r\n\r\n// //   // Function to add a new patient\r\n// //   const addPatient = (patient) => {\r\n// //     setPatients([...patients, patient]);\r\n// //   };\r\n\r\n// //   // Function to delete a patient\r\n// //   const deletePatient = (index) => {\r\n// //     const updatedPatients = [...patients];\r\n// //     updatedPatients.splice(index, 1);\r\n// //     setPatients(updatedPatients);\r\n// //   };\r\n\r\n// //   // Function to edit a patient\r\n// //   const editPatient = (index) => {\r\n// //     setEditIndex(index);\r\n// //     setEditedPatient(patients[index]);\r\n// //   };\r\n\r\n// //   // Function to update a patient\r\n// //   const updatePatient = (index, updatedPatient) => {\r\n// //     const updatedPatients = [...patients];\r\n// //     updatedPatients[index] = updatedPatient;\r\n// //     setPatients(updatedPatients);\r\n// //     setEditIndex(null);\r\n// //     setEditedPatient({\r\n// //       name: '',\r\n// //       age: '',\r\n// //       gender: '',\r\n// //       appointment: '',\r\n// //       phone: '',\r\n// //       disease: '',\r\n// //       doctorName: '',\r\n// //       address: '',\r\n// //       status: ''\r\n// //     });\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"patient-management\">\r\n// //       <h2>Patient Management</h2>\r\n// //       {/* Form to add or edit patient */}\r\n// //       <form onSubmit={(e) => {\r\n// //         e.preventDefault();\r\n// //         if (editIndex !== null) {\r\n// //           updatePatient(editIndex, editedPatient);\r\n// //         } else {\r\n// //           addPatient(editedPatient);\r\n// //         }\r\n// //       }}>\r\n// //         <input type=\"text\" name=\"name\" placeholder=\"Name\" required value={editedPatient.name} onChange={(e) => setEditedPatient({...editedPatient, name: e.target.value})} />\r\n// //         <input type=\"number\" name=\"age\" placeholder=\"Age\" required value={editedPatient.age} onChange={(e) => setEditedPatient({...editedPatient, age: e.target.value})} />\r\n// //         <select name=\"gender\" required value={editedPatient.gender} onChange={(e) => setEditedPatient({...editedPatient, gender: e.target.value})}>\r\n// //           <option value=\"\">Select Gender</option>\r\n// //           <option value=\"Male\">Male</option>\r\n// //           <option value=\"Female\">Female</option>\r\n// //           <option value=\"Other\">Other</option>\r\n// //         </select>\r\n// //         <input type=\"date\" name=\"appointment\" placeholder=\"Appointment Date\" required value={editedPatient.appointment} onChange={(e) => setEditedPatient({...editedPatient, appointment: e.target.value})} />\r\n// //         <input type=\"tel\" name=\"phone\" placeholder=\"Phone\" required value={editedPatient.phone} onChange={(e) => setEditedPatient({...editedPatient, phone: e.target.value})} />\r\n// //         <input type=\"text\" name=\"disease\" placeholder=\"Disease\" required value={editedPatient.disease} onChange={(e) => setEditedPatient({...editedPatient, disease: e.target.value})} />\r\n// //         <input type=\"text\" name=\"doctorName\" placeholder=\"Doctor Name\" required value={editedPatient.doctorName} onChange={(e) => setEditedPatient({...editedPatient, doctorName: e.target.value})} />\r\n// //         <input type=\"text\" name=\"address\" placeholder=\"Address\" required value={editedPatient.address} onChange={(e) => setEditedPatient({...editedPatient, address: e.target.value})} />\r\n// //         <select name=\"status\" required value={editedPatient.status} onChange={(e) => setEditedPatient({...editedPatient, status: e.target.value})}>\r\n// //           <option value=\"\">Select Status</option>\r\n// //           <option value=\"Active\">Active</option>\r\n// //           <option value=\"Inactive\">Inactive</option>\r\n// //           <option value=\"Pending\">Pending</option>\r\n// //         </select>\r\n// //         <button type=\"submit\">{editIndex !== null ? 'Update' : 'Add'} Patient</button>\r\n// //       </form>\r\n// //       {/* List of patients */}\r\n// //       <table>\r\n// //         <thead>\r\n// //           <tr>\r\n// //             <th>Name</th>\r\n// //             <th>Age</th>\r\n// //             <th>Gender</th>\r\n// //             <th>Appointment</th>\r\n// //             <th>Phone</th>\r\n// //             <th>Disease</th>\r\n// //             <th>Doctor Name</th>\r\n// //             <th>Address</th>\r\n// //             <th>Status</th>\r\n// //             <th>Action</th>\r\n// //           </tr>\r\n// //         </thead>\r\n// //         <tbody>\r\n// //           {patients.map((patient, index) => (\r\n// //             <tr key={index}>\r\n// //               <td>{patient.name}</td>\r\n// //               <td>{patient.age}</td>\r\n// //               <td>{patient.gender}</td>\r\n// //               <td>{patient.appointment}</td>\r\n// //               <td>{patient.phone}</td>\r\n// //               <td>{patient.disease}</td>\r\n// //               <td>{patient.doctorName}</td>\r\n// //               <td>{patient.address}</td>\r\n// //               <td>{patient.status}</td>\r\n// //               <td>\r\n// //                 <button onClick={() => deletePatient(index)}>Delete</button>\r\n// //                 <button onClick={() => editPatient(index)}>Edit</button>\r\n// //               </td>\r\n// //             </tr>\r\n// //           ))}\r\n// //         </tbody>\r\n// //       </table>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default PatientManagement;\r\n// import React, { useState, useEffect } from 'react';\r\n// import './PatientManagement.css';\r\n// import axios from 'axios';\r\n\r\n// function PatientManagement() {\r\n//   const [patients, setPatients] = useState([]);\r\n//   const [editedPatient, setEditedPatient] = useState({\r\n//     name: '',\r\n//     age: '',\r\n//     gender: '',\r\n//     appointment: '',\r\n//     phone: '',\r\n//     disease: '',\r\n//     doctorName: '',\r\n//     address: '',\r\n//     status: ''\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     fetchPatients();\r\n//   }, []);\r\n\r\n//   const fetchPatients = async () => {\r\n//     try {\r\n//       const response = await axios.get('/api/patients');\r\n//       setPatients(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching patients:', error);\r\n//     }\r\n//   };\r\n\r\n//   const addPatient = async () => {\r\n//     try {\r\n//       const response = await axios.post('/api/patients', editedPatient);\r\n//       setPatients([...patients, response.data]);\r\n//       setEditedPatient({\r\n//         name: '',\r\n//         age: '',\r\n//         gender: '',\r\n//         appointment: '',\r\n//         phone: '',\r\n//         disease: '',\r\n//         doctorName: '',\r\n//         address: '',\r\n//         status: ''\r\n//       });\r\n//     } catch (error) {\r\n//       console.error('Error adding patient:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     setEditedPatient({ ...editedPatient, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"patient-management\">\r\n//       <h2>Patient Management</h2>\r\n//       <form onSubmit={(e) => {\r\n//         e.preventDefault();\r\n//         addPatient();\r\n//       }}>\r\n//         {/* Input fields */}\r\n//         <button type=\"submit\">Add Patient</button>\r\n//       </form>\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             {/* Table headers */}\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {patients.map((patient, index) => (\r\n//             <tr key={index}>\r\n//               {/* Table data */}\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default PatientManagement;\r\n"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}