{"ast":null,"code":"// // import React, { useState } from 'react';\n// // import './DoctorManagement.css'; // Import CSS file\n\n// // function DoctorManagement() {\n// //   // State to manage doctors\n// //   const [doctors, setDoctors] = useState([]);\n// //   // State to track the index of the doctor being edited\n// //   const [editIndex, setEditIndex] = useState(null);\n// //   // State to track doctor details for editing\n// //   const [editedDoctor, setEditedDoctor] = useState({\n// //     name: '',\n// //     qualification: '',\n// //     dob: '',\n// //     specialization: '',\n// //     email: '',\n// //     phone: ''\n// //   });\n\n// //   // Function to add a new doctor\n// //   const addDoctor = (doctor) => {\n// //     setDoctors([...doctors, doctor]);\n// //   };\n\n// //   // Function to delete a doctor\n// //   const deleteDoctor = (index) => {\n// //     const updatedDoctors = [...doctors];\n// //     updatedDoctors.splice(index, 1);\n// //     setDoctors(updatedDoctors);\n// //   };\n\n// //   // Function to edit a doctor\n// //   const editDoctor = (index) => {\n// //     setEditIndex(index);\n// //     setEditedDoctor(doctors[index]);\n// //   };\n\n// //   // Function to update a doctor\n// //   const updateDoctor = (index, updatedDoctor) => {\n// //     const updatedDoctors = [...doctors];\n// //     updatedDoctors[index] = updatedDoctor;\n// //     setDoctors(updatedDoctors);\n// //     setEditIndex(null);\n// //     setEditedDoctor({\n// //       name: '',\n// //       qualification: '',\n// //       dob: '',\n// //       specialization: '',\n// //       email: '',\n// //       phone: ''\n// //     });\n// //   };\n\n// //   return (\n// //     <div className=\"doctor-management\">\n// //       <h2>Doctor Management</h2>\n// //       {/* Form to add or edit doctor */}\n// //       <form onSubmit={(e) => {\n// //         e.preventDefault();\n// //         if (editIndex !== null) {\n// //           updateDoctor(editIndex, editedDoctor);\n// //         } else {\n// //           addDoctor(editedDoctor);\n// //         }\n// //       }}>\n// //         <input type=\"text\" name=\"name\" placeholder=\"Name\" required value={editedDoctor.name} onChange={(e) => setEditedDoctor({...editedDoctor, name: e.target.value})} />\n// //         <input type=\"text\" name=\"qualification\" placeholder=\"Qualification\" required value={editedDoctor.qualification} onChange={(e) => setEditedDoctor({...editedDoctor, qualification: e.target.value})} />\n// //         <input type=\"date\" name=\"dob\" placeholder=\"Date of Birth\" required value={editedDoctor.dob} onChange={(e) => setEditedDoctor({...editedDoctor, dob: e.target.value})} />\n// //         <input type=\"text\" name=\"specialization\" placeholder=\"Specialization\" required value={editedDoctor.specialization} onChange={(e) => setEditedDoctor({...editedDoctor, specialization: e.target.value})} />\n// //         <input type=\"email\" name=\"email\" placeholder=\"Email\" required value={editedDoctor.email} onChange={(e) => setEditedDoctor({...editedDoctor, email: e.target.value})} />\n// //         <input type=\"tel\" name=\"phone\" placeholder=\"Phone\" required value={editedDoctor.phone} onChange={(e) => setEditedDoctor({...editedDoctor, phone: e.target.value})} />\n// //         <button type=\"submit\">{editIndex !== null ? 'Update' : 'Add'} Doctor</button>\n// //       </form>\n// //       {/* List of doctors */}\n// //       <table>\n// //         <thead>\n// //           <tr>\n// //             <th>Name</th>\n// //             <th>Qualification</th>\n// //             <th>DOB</th>\n// //             <th>Specialization</th>\n// //             <th>Email</th>\n// //             <th>Phone</th>\n// //             <th>Action</th>\n// //           </tr>\n// //         </thead>\n// //         <tbody>\n// //           {doctors.map((doctor, index) => (\n// //             <tr key={index}>\n// //               <td>{doctor.name}</td>\n// //               <td>{doctor.qualification}</td>\n// //               <td>{doctor.dob}</td>\n// //               <td>{doctor.specialization}</td>\n// //               <td>{doctor.email}</td>\n// //               <td>{doctor.phone}</td>\n// //               <td>\n// //                 <button onClick={() => deleteDoctor(index)}>Delete</button>\n// //                 <button onClick={() => editDoctor(index)}>Edit</button>\n// //               </td>\n// //             </tr>\n// //           ))}\n// //         </tbody>\n// //       </table>\n// //     </div>\n// //   );\n// // }\n\n// // export default DoctorManagement;\n// import React, { useState, useEffect } from 'react';\n// import './DoctorManagement.css';\n// import axios from 'axios';\n\n// function DoctorManagement() {\n//   const [doctors, setDoctors] = useState([]);\n//   const [editedDoctor, setEditedDoctor] = useState({\n//     name: '',\n//     qualification: '',\n//     dob: '',\n//     specialization: '',\n//     email: '',\n//     phone: ''\n//   });\n\n//   useEffect(() => {\n//     fetchDoctors();\n//   }, []);\n\n//   const fetchDoctors = async () => {\n//     try {\n//       const response = await axios.get('/api/doctors');\n//       setDoctors(response.data);\n//     } catch (error) {\n//       console.error('Error fetching doctors:', error);\n//     }\n//   };\n\n//   const addDoctor = async () => {\n//     try {\n//       const response = await axios.post('/api/doctors', editedDoctor);\n//       setDoctors([...doctors, response.data]);\n//       setEditedDoctor({\n//         name: '',\n//         qualification: '',\n//         dob: '',\n//         specialization: '',\n//         email: '',\n//         phone: ''\n//       });\n//     } catch (error) {\n//       console.error('Error adding doctor:', error);\n//     }\n//   };\n\n//   const handleChange = (e) => {\n//     setEditedDoctor({ ...editedDoctor, [e.target.name]: e.target.value });\n//   };\n\n//   return (\n//     <div className=\"doctor-management\">\n//       <h2>Doctor Management</h2>\n//       <form onSubmit={(e) => {\n//         e.preventDefault();\n//         addDoctor();\n//       }}>\n//         <input type=\"text\" name=\"name\" placeholder=\"Name\" required value={editedDoctor.name} onChange={handleChange} />\n//         <input type=\"text\" name=\"qualification\" placeholder=\"Qualification\" required value={editedDoctor.qualification} onChange={handleChange} />\n//         <input type=\"date\" name=\"dob\" placeholder=\"Date of Birth\" required value={editedDoctor.dob} onChange={handleChange} />\n//         <input type=\"text\" name=\"specialization\" placeholder=\"Specialization\" required value={editedDoctor.specialization} onChange={handleChange} />\n//         <input type=\"email\" name=\"email\" placeholder=\"Email\" required value={editedDoctor.email} onChange={handleChange} />\n//         <input type=\"tel\" name=\"phone\" placeholder=\"Phone\" required value={editedDoctor.phone} onChange={handleChange} />\n//         <button type=\"submit\">Add Doctor</button>\n//       </form>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Qualification</th>\n//             <th>DOB</th>\n//             <th>Specialization</th>\n//             <th>Email</th>\n//             <th>Phone</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {doctors.map((doctor, index) => (\n//             <tr key={index}>\n//               <td>{doctor.name}</td>\n//               <td>{doctor.qualification}</td>\n//               <td>{doctor.dob}</td>\n//               <td>{doctor.specialization}</td>\n//               <td>{doctor.email}</td>\n//               <td>{doctor.phone}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n\n// export default DoctorManagement;","map":{"version":3,"names":[],"sources":["C:/Users/sunid/Desktop/cc - Copy/my-app/src/DoctorManagement.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import './DoctorManagement.css'; // Import CSS file\r\n\r\n// // function DoctorManagement() {\r\n// //   // State to manage doctors\r\n// //   const [doctors, setDoctors] = useState([]);\r\n// //   // State to track the index of the doctor being edited\r\n// //   const [editIndex, setEditIndex] = useState(null);\r\n// //   // State to track doctor details for editing\r\n// //   const [editedDoctor, setEditedDoctor] = useState({\r\n// //     name: '',\r\n// //     qualification: '',\r\n// //     dob: '',\r\n// //     specialization: '',\r\n// //     email: '',\r\n// //     phone: ''\r\n// //   });\r\n\r\n// //   // Function to add a new doctor\r\n// //   const addDoctor = (doctor) => {\r\n// //     setDoctors([...doctors, doctor]);\r\n// //   };\r\n\r\n// //   // Function to delete a doctor\r\n// //   const deleteDoctor = (index) => {\r\n// //     const updatedDoctors = [...doctors];\r\n// //     updatedDoctors.splice(index, 1);\r\n// //     setDoctors(updatedDoctors);\r\n// //   };\r\n\r\n// //   // Function to edit a doctor\r\n// //   const editDoctor = (index) => {\r\n// //     setEditIndex(index);\r\n// //     setEditedDoctor(doctors[index]);\r\n// //   };\r\n\r\n// //   // Function to update a doctor\r\n// //   const updateDoctor = (index, updatedDoctor) => {\r\n// //     const updatedDoctors = [...doctors];\r\n// //     updatedDoctors[index] = updatedDoctor;\r\n// //     setDoctors(updatedDoctors);\r\n// //     setEditIndex(null);\r\n// //     setEditedDoctor({\r\n// //       name: '',\r\n// //       qualification: '',\r\n// //       dob: '',\r\n// //       specialization: '',\r\n// //       email: '',\r\n// //       phone: ''\r\n// //     });\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"doctor-management\">\r\n// //       <h2>Doctor Management</h2>\r\n// //       {/* Form to add or edit doctor */}\r\n// //       <form onSubmit={(e) => {\r\n// //         e.preventDefault();\r\n// //         if (editIndex !== null) {\r\n// //           updateDoctor(editIndex, editedDoctor);\r\n// //         } else {\r\n// //           addDoctor(editedDoctor);\r\n// //         }\r\n// //       }}>\r\n// //         <input type=\"text\" name=\"name\" placeholder=\"Name\" required value={editedDoctor.name} onChange={(e) => setEditedDoctor({...editedDoctor, name: e.target.value})} />\r\n// //         <input type=\"text\" name=\"qualification\" placeholder=\"Qualification\" required value={editedDoctor.qualification} onChange={(e) => setEditedDoctor({...editedDoctor, qualification: e.target.value})} />\r\n// //         <input type=\"date\" name=\"dob\" placeholder=\"Date of Birth\" required value={editedDoctor.dob} onChange={(e) => setEditedDoctor({...editedDoctor, dob: e.target.value})} />\r\n// //         <input type=\"text\" name=\"specialization\" placeholder=\"Specialization\" required value={editedDoctor.specialization} onChange={(e) => setEditedDoctor({...editedDoctor, specialization: e.target.value})} />\r\n// //         <input type=\"email\" name=\"email\" placeholder=\"Email\" required value={editedDoctor.email} onChange={(e) => setEditedDoctor({...editedDoctor, email: e.target.value})} />\r\n// //         <input type=\"tel\" name=\"phone\" placeholder=\"Phone\" required value={editedDoctor.phone} onChange={(e) => setEditedDoctor({...editedDoctor, phone: e.target.value})} />\r\n// //         <button type=\"submit\">{editIndex !== null ? 'Update' : 'Add'} Doctor</button>\r\n// //       </form>\r\n// //       {/* List of doctors */}\r\n// //       <table>\r\n// //         <thead>\r\n// //           <tr>\r\n// //             <th>Name</th>\r\n// //             <th>Qualification</th>\r\n// //             <th>DOB</th>\r\n// //             <th>Specialization</th>\r\n// //             <th>Email</th>\r\n// //             <th>Phone</th>\r\n// //             <th>Action</th>\r\n// //           </tr>\r\n// //         </thead>\r\n// //         <tbody>\r\n// //           {doctors.map((doctor, index) => (\r\n// //             <tr key={index}>\r\n// //               <td>{doctor.name}</td>\r\n// //               <td>{doctor.qualification}</td>\r\n// //               <td>{doctor.dob}</td>\r\n// //               <td>{doctor.specialization}</td>\r\n// //               <td>{doctor.email}</td>\r\n// //               <td>{doctor.phone}</td>\r\n// //               <td>\r\n// //                 <button onClick={() => deleteDoctor(index)}>Delete</button>\r\n// //                 <button onClick={() => editDoctor(index)}>Edit</button>\r\n// //               </td>\r\n// //             </tr>\r\n// //           ))}\r\n// //         </tbody>\r\n// //       </table>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default DoctorManagement;\r\n// import React, { useState, useEffect } from 'react';\r\n// import './DoctorManagement.css';\r\n// import axios from 'axios';\r\n\r\n// function DoctorManagement() {\r\n//   const [doctors, setDoctors] = useState([]);\r\n//   const [editedDoctor, setEditedDoctor] = useState({\r\n//     name: '',\r\n//     qualification: '',\r\n//     dob: '',\r\n//     specialization: '',\r\n//     email: '',\r\n//     phone: ''\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     fetchDoctors();\r\n//   }, []);\r\n\r\n//   const fetchDoctors = async () => {\r\n//     try {\r\n//       const response = await axios.get('/api/doctors');\r\n//       setDoctors(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching doctors:', error);\r\n//     }\r\n//   };\r\n\r\n//   const addDoctor = async () => {\r\n//     try {\r\n//       const response = await axios.post('/api/doctors', editedDoctor);\r\n//       setDoctors([...doctors, response.data]);\r\n//       setEditedDoctor({\r\n//         name: '',\r\n//         qualification: '',\r\n//         dob: '',\r\n//         specialization: '',\r\n//         email: '',\r\n//         phone: ''\r\n//       });\r\n//     } catch (error) {\r\n//       console.error('Error adding doctor:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     setEditedDoctor({ ...editedDoctor, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"doctor-management\">\r\n//       <h2>Doctor Management</h2>\r\n//       <form onSubmit={(e) => {\r\n//         e.preventDefault();\r\n//         addDoctor();\r\n//       }}>\r\n//         <input type=\"text\" name=\"name\" placeholder=\"Name\" required value={editedDoctor.name} onChange={handleChange} />\r\n//         <input type=\"text\" name=\"qualification\" placeholder=\"Qualification\" required value={editedDoctor.qualification} onChange={handleChange} />\r\n//         <input type=\"date\" name=\"dob\" placeholder=\"Date of Birth\" required value={editedDoctor.dob} onChange={handleChange} />\r\n//         <input type=\"text\" name=\"specialization\" placeholder=\"Specialization\" required value={editedDoctor.specialization} onChange={handleChange} />\r\n//         <input type=\"email\" name=\"email\" placeholder=\"Email\" required value={editedDoctor.email} onChange={handleChange} />\r\n//         <input type=\"tel\" name=\"phone\" placeholder=\"Phone\" required value={editedDoctor.phone} onChange={handleChange} />\r\n//         <button type=\"submit\">Add Doctor</button>\r\n//       </form>\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Qualification</th>\r\n//             <th>DOB</th>\r\n//             <th>Specialization</th>\r\n//             <th>Email</th>\r\n//             <th>Phone</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {doctors.map((doctor, index) => (\r\n//             <tr key={index}>\r\n//               <td>{doctor.name}</td>\r\n//               <td>{doctor.qualification}</td>\r\n//               <td>{doctor.dob}</td>\r\n//               <td>{doctor.specialization}</td>\r\n//               <td>{doctor.email}</td>\r\n//               <td>{doctor.phone}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default DoctorManagement;\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}