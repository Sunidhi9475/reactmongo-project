{"ast":null,"code":"// // import React, { useState } from 'react';\n// // import './DoctorManagement.css'; // Import CSS file\n// // function DoctorManagement() {\n// //   // State to manage doctors\n// //   const [doctors, setDoctors] = useState([]);\n// //   // State to track the index of the doctor being edited\n// //   const [editIndex, setEditIndex] = useState(null);\n// //   // State to track doctor details for editing\n// //   const [editedDoctor, setEditedDoctor] = useState({\n// //     name: '',\n// //     qualification: '',\n// //     dob: '',\n// //     specialization: '',\n// //     email: '',\n// //     phone: ''\n// //   });\n// //   // Function to add a new doctor\n// //   const addDoctor = (doctor) => {\n// //     setDoctors([...doctors, doctor]);\n// //   };\n// //   // Function to delete a doctor\n// //   const deleteDoctor = (index) => {\n// //     const updatedDoctors = [...doctors];\n// //     updatedDoctors.splice(index, 1);\n// //     setDoctors(updatedDoctors);\n// //   };\n// //   // Function to edit a doctor\n// //   const editDoctor = (index) => {\n// //     setEditIndex(index);\n// //     setEditedDoctor(doctors[index]);\n// //   };\n// //   // Function to update a doctor\n// //   const updateDoctor = (index, updatedDoctor) => {\n// //     const updatedDoctors = [...doctors];\n// //     updatedDoctors[index] = updatedDoctor;\n// //     setDoctors(updatedDoctors);\n// //     setEditIndex(null);\n// //     setEditedDoctor({\n// //       name: '',\n// //       qualification: '',\n// //       dob: '',\n// //       specialization: '',\n// //       email: '',\n// //       phone: ''\n// //     });\n// //   };\n// //   return (\n// //     <div className=\"doctor-management\">\n// //       <h2>Doctor Management</h2>\n// //       {/* Form to add or edit doctor */}\n// //       <form onSubmit={(e) => {\n// //         e.preventDefault();\n// //         if (editIndex !== null) {\n// //           updateDoctor(editIndex, editedDoctor);\n// //         } else {\n// //           addDoctor(editedDoctor);\n// //         }\n// //       }}>\n// //         <input type=\"text\" name=\"name\" placeholder=\"Name\" required value={editedDoctor.name} onChange={(e) => setEditedDoctor({...editedDoctor, name: e.target.value})} />\n// //         <input type=\"text\" name=\"qualification\" placeholder=\"Qualification\" required value={editedDoctor.qualification} onChange={(e) => setEditedDoctor({...editedDoctor, qualification: e.target.value})} />\n// //         <input type=\"date\" name=\"dob\" placeholder=\"Date of Birth\" required value={editedDoctor.dob} onChange={(e) => setEditedDoctor({...editedDoctor, dob: e.target.value})} />\n// //         <input type=\"text\" name=\"specialization\" placeholder=\"Specialization\" required value={editedDoctor.specialization} onChange={(e) => setEditedDoctor({...editedDoctor, specialization: e.target.value})} />\n// //         <input type=\"email\" name=\"email\" placeholder=\"Email\" required value={editedDoctor.email} onChange={(e) => setEditedDoctor({...editedDoctor, email: e.target.value})} />\n// //         <input type=\"tel\" name=\"phone\" placeholder=\"Phone\" required value={editedDoctor.phone} onChange={(e) => setEditedDoctor({...editedDoctor, phone: e.target.value})} />\n// //         <button type=\"submit\">{editIndex !== null ? 'Update' : 'Add'} Doctor</button>\n// //       </form>\n// //       {/* List of doctors */}\n// //       <table>\n// //         <thead>\n// //           <tr>\n// //             <th>Name</th>\n// //             <th>Qualification</th>\n// //             <th>DOB</th>\n// //             <th>Specialization</th>\n// //             <th>Email</th>\n// //             <th>Phone</th>\n// //             <th>Action</th>\n// //           </tr>\n// //         </thead>\n// //         <tbody>\n// //           {doctors.map((doctor, index) => (\n// //             <tr key={index}>\n// //               <td>{doctor.name}</td>\n// //               <td>{doctor.qualification}</td>\n// //               <td>{doctor.dob}</td>\n// //               <td>{doctor.specialization}</td>\n// //               <td>{doctor.email}</td>\n// //               <td>{doctor.phone}</td>\n// //               <td>\n// //                 <button onClick={() => deleteDoctor(index)}>Delete</button>\n// //                 <button onClick={() => editDoctor(index)}>Edit</button>\n// //               </td>\n// //             </tr>\n// //           ))}\n// //         </tbody>\n// //       </table>\n// //     </div>\n// //   );\n// // }\n// // export default DoctorManagement;\n// import React, { useState, useEffect } from 'react';\n// import './DoctorManagement.css';\n// import axios from 'axios';\n// function DoctorManagement() {\n//   const [doctors, setDoctors] = useState([]);\n//   const [editedDoctor, setEditedDoctor] = useState({\n//     name: '',\n//     qualification: '',\n//     dob: '',\n//     specialization: '',\n//     email: '',\n//     phone: ''\n//   });\n//   useEffect(() => {\n//     fetchDoctors();\n//   }, []);\n//   const fetchDoctors = async () => {\n//     try {\n//       const response = await axios.get('/api/doctors');\n//       setDoctors(response.data);\n//     } catch (error) {\n//       console.error('Error fetching doctors:', error);\n//     }\n//   };\n//   const addDoctor = async () => {\n//     try {\n//       const response = await axios.post('/api/doctors', editedDoctor);\n//       setDoctors([...doctors, response.data]);\n//       setEditedDoctor({\n//         name: '',\n//         qualification: '',\n//         dob: '',\n//         specialization: '',\n//         email: '',\n//         phone: ''\n//       });\n//     } catch (error) {\n//       console.error('Error adding doctor:', error);\n//     }\n//   };\n//   const handleChange = (e) => {\n//     setEditedDoctor({ ...editedDoctor, [e.target.name]: e.target.value });\n//   };\n//   return (\n//     <div className=\"doctor-management\">\n//       <h2>Doctor Management</h2>\n//       <form onSubmit={(e) => {\n//         e.preventDefault();\n//         addDoctor();\n//       }}>\n//         <input type=\"text\" name=\"name\" placeholder=\"Name\" required value={editedDoctor.name} onChange={handleChange} />\n//         <input type=\"text\" name=\"qualification\" placeholder=\"Qualification\" required value={editedDoctor.qualification} onChange={handleChange} />\n//         <input type=\"date\" name=\"dob\" placeholder=\"Date of Birth\" required value={editedDoctor.dob} onChange={handleChange} />\n//         <input type=\"text\" name=\"specialization\" placeholder=\"Specialization\" required value={editedDoctor.specialization} onChange={handleChange} />\n//         <input type=\"email\" name=\"email\" placeholder=\"Email\" required value={editedDoctor.email} onChange={handleChange} />\n//         <input type=\"tel\" name=\"phone\" placeholder=\"Phone\" required value={editedDoctor.phone} onChange={handleChange} />\n//         <button type=\"submit\">Add Doctor</button>\n//       </form>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Qualification</th>\n//             <th>DOB</th>\n//             <th>Specialization</th>\n//             <th>Email</th>\n//             <th>Phone</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {doctors.map((doctor, index) => (\n//             <tr key={index}>\n//               <td>{doctor.name}</td>\n//               <td>{doctor.qualification}</td>\n//               <td>{doctor.dob}</td>\n//               <td>{doctor.specialization}</td>\n//               <td>{doctor.email}</td>\n//               <td>{doctor.phone}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n// export default DoctorManagement;\n// import React, { useState, useEffect } from 'react';\n// import './DoctorManagement.css';\n// import axios from 'axios';\n// function DoctorManagement() {\n//   const [doctors, setDoctors] = useState([]);\n//   const [editedDoctor, setEditedDoctor] = useState({\n//     name: '',\n//     qualification: '',\n//     dob: '',\n//     specialization: '',\n//     email: '',\n//     phone: ''\n//   });\n//   useEffect(() => {\n//     fetchDoctors();\n//   }, []);\n//   const fetchDoctors = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/api/doctors');\n//       setDoctors(response.data);\n//     } catch (error) {\n//       console.error('Error fetching doctors:', error);\n//     }\n//   };\n//   const addDoctor = async (e) => {\n//     try {\n//       e.preventDefault(); // Prevent form submission\n//       const response = await axios.post('http://localhost:5000/api/doctors', editedDoctor);\n//       setDoctors([...doctors, response.data]);\n//       setEditedDoctor({\n//         name: '',\n//         qualification: '',\n//         dob: '',\n//         specialization: '',\n//         email: '',\n//         phone: ''\n//       });\n//     } catch (error) {\n//       console.error('Error adding doctor:', error);\n//     }\n//   };\n//   const handleChange = (e) => {\n//     setEditedDoctor({ ...editedDoctor, [e.target.name]: e.target.value });\n//   };\n//   return (\n//     <div className=\"doctor-management\">\n//       <h2>Doctor Management</h2>\n//       <form onSubmit={(e) => addDoctor(e)}>\n//         <input type=\"text\" name=\"name\" placeholder=\"Name\" required value={editedDoctor.name} onChange={handleChange} />\n//         <input type=\"text\" name=\"qualification\" placeholder=\"Qualification\" required value={editedDoctor.qualification} onChange={handleChange} />\n//         <input type=\"date\" name=\"dob\" placeholder=\"Date of Birth\" required value={editedDoctor.dob} onChange={handleChange} />\n//         <input type=\"text\" name=\"specialization\" placeholder=\"Specialization\" required value={editedDoctor.specialization} onChange={handleChange} />\n//         <input type=\"email\" name=\"email\" placeholder=\"Email\" required value={editedDoctor.email} onChange={handleChange} />\n//         <input type=\"tel\" name=\"phone\" placeholder=\"Phone\" required value={editedDoctor.phone} onChange={handleChange} />\n//         <button type=\"submit\">Add Doctor</button>\n//       </form>\n//       <table>\n//         <thead>\n//           <tr>\n//             <th>Name</th>\n//             <th>Qualification</th>\n//             <th>DOB</th>\n//             <th>Specialization</th>\n//             <th>Email</th>\n//             <th>Phone</th>\n//           </tr>\n//         </thead>\n//         <tbody>\n//           {doctors.map((doctor, index) => (\n//             <tr key={index}>\n//               <td>{doctor.name}</td>\n//               <td>{doctor.qualification}</td>\n//               <td>{doctor.dob}</td>\n//               <td>{doctor.specialization}</td>\n//               <td>{doctor.email}</td>\n//               <td>{doctor.phone}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// }\n// export default DoctorManagement;\nimport React,{useState,useEffect}from'react';import'./DoctorManagement.css';import axios from'axios';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";function DoctorManagement(){const[doctors,setDoctors]=useState([]);const[editedDoctor,setEditedDoctor]=useState({name:'',qualification:'',dob:'',specialization:'',email:'',phone:''});const[editingIndex,setEditingIndex]=useState(null);useEffect(()=>{fetchDoctors();},[]);const fetchDoctors=async()=>{try{const response=await axios.get('http://localhost:5000/api/doctors');setDoctors(response.data);}catch(error){console.error('Error fetching doctors:',error);}};const addDoctor=async e=>{try{e.preventDefault();// Prevent form submission\nconst response=await axios.post('http://localhost:5000/api/doctors',editedDoctor);setDoctors([...doctors,response.data]);setEditedDoctor({name:'',qualification:'',dob:'',specialization:'',email:'',phone:''});}catch(error){console.error('Error adding doctor:',error);}};const editDoctor=async index=>{try{const response=await axios.put(\"http://localhost:5000/api/doctors/\".concat(doctors[index]._id),editedDoctor);const updatedDoctors=[...doctors];updatedDoctors[index]=response.data;setDoctors(updatedDoctors);setEditingIndex(null);setEditedDoctor({name:'',qualification:'',dob:'',specialization:'',email:'',phone:''});}catch(error){console.error('Error editing doctor:',error);}};const deleteDoctor=async id=>{try{await axios.delete(\"http://localhost:5000/api/doctors/\".concat(id));const filteredDoctors=doctors.filter(doctor=>doctor._id!==id);setDoctors(filteredDoctors);}catch(error){console.error('Error deleting doctor:',error);}};const handleChange=e=>{setEditedDoctor({...editedDoctor,[e.target.name]:e.target.value});};const handleEditClick=index=>{setEditingIndex(index);setEditedDoctor(doctors[index]);};const handleCancelEdit=()=>{setEditingIndex(null);setEditedDoctor({name:'',qualification:'',dob:'',specialization:'',email:'',phone:''});};return/*#__PURE__*/_jsxs(\"div\",{className:\"doctor-management\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Doctor Management\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:e=>addDoctor(e),children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",placeholder:\"Name\",required:true,value:editedDoctor.name,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"qualification\",placeholder:\"Qualification\",required:true,value:editedDoctor.qualification,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"dob\",placeholder:\"Date of Birth\",required:true,value:editedDoctor.dob,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"specialization\",placeholder:\"Specialization\",required:true,value:editedDoctor.specialization,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",placeholder:\"Email\",required:true,value:editedDoctor.email,onChange:handleChange}),/*#__PURE__*/_jsx(\"input\",{type:\"tel\",name:\"phone\",placeholder:\"Phone\",required:true,value:editedDoctor.phone,onChange:handleChange}),editingIndex!==null?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>editDoctor(editingIndex),children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleCancelEdit,children:\"Cancel\"})]}):/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Doctor\"})]}),/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Qualification\"}),/*#__PURE__*/_jsx(\"th\",{children:\"DOB\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Specialization\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Email\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Phone\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Actions\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:doctors.map((doctor,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:editingIndex===index?/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",value:editedDoctor.name,onChange:handleChange}):doctor.name}),/*#__PURE__*/_jsx(\"td\",{children:editingIndex===index?/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"qualification\",value:editedDoctor.qualification,onChange:handleChange}):doctor.qualification}),/*#__PURE__*/_jsx(\"td\",{children:editingIndex===index?/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"dob\",value:editedDoctor.dob,onChange:handleChange}):doctor.dob}),/*#__PURE__*/_jsx(\"td\",{children:editingIndex===index?/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"specialization\",value:editedDoctor.specialization,onChange:handleChange}):doctor.specialization}),/*#__PURE__*/_jsx(\"td\",{children:editingIndex===index?/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",value:editedDoctor.email,onChange:handleChange}):doctor.email}),/*#__PURE__*/_jsx(\"td\",{children:editingIndex===index?/*#__PURE__*/_jsx(\"input\",{type:\"tel\",name:\"phone\",value:editedDoctor.phone,onChange:handleChange}):doctor.phone}),/*#__PURE__*/_jsx(\"td\",{children:editingIndex===index?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>editDoctor(index),children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCancelEdit,children:\"Cancel\"})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEditClick(index),children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteDoctor(doctor._id),children:\"Delete\"})]})})]},index))})]})]});}export default DoctorManagement;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","DoctorManagement","doctors","setDoctors","editedDoctor","setEditedDoctor","name","qualification","dob","specialization","email","phone","editingIndex","setEditingIndex","fetchDoctors","response","get","data","error","console","addDoctor","e","preventDefault","post","editDoctor","index","put","concat","_id","updatedDoctors","deleteDoctor","id","delete","filteredDoctors","filter","doctor","handleChange","target","value","handleEditClick","handleCancelEdit","className","children","onSubmit","type","placeholder","required","onChange","onClick","map"],"sources":["C:/Users/sunid/Desktop/cc - Copy/my-app/src/DoctorManagement.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import './DoctorManagement.css'; // Import CSS file\r\n\r\n// // function DoctorManagement() {\r\n// //   // State to manage doctors\r\n// //   const [doctors, setDoctors] = useState([]);\r\n// //   // State to track the index of the doctor being edited\r\n// //   const [editIndex, setEditIndex] = useState(null);\r\n// //   // State to track doctor details for editing\r\n// //   const [editedDoctor, setEditedDoctor] = useState({\r\n// //     name: '',\r\n// //     qualification: '',\r\n// //     dob: '',\r\n// //     specialization: '',\r\n// //     email: '',\r\n// //     phone: ''\r\n// //   });\r\n\r\n// //   // Function to add a new doctor\r\n// //   const addDoctor = (doctor) => {\r\n// //     setDoctors([...doctors, doctor]);\r\n// //   };\r\n\r\n// //   // Function to delete a doctor\r\n// //   const deleteDoctor = (index) => {\r\n// //     const updatedDoctors = [...doctors];\r\n// //     updatedDoctors.splice(index, 1);\r\n// //     setDoctors(updatedDoctors);\r\n// //   };\r\n\r\n// //   // Function to edit a doctor\r\n// //   const editDoctor = (index) => {\r\n// //     setEditIndex(index);\r\n// //     setEditedDoctor(doctors[index]);\r\n// //   };\r\n\r\n// //   // Function to update a doctor\r\n// //   const updateDoctor = (index, updatedDoctor) => {\r\n// //     const updatedDoctors = [...doctors];\r\n// //     updatedDoctors[index] = updatedDoctor;\r\n// //     setDoctors(updatedDoctors);\r\n// //     setEditIndex(null);\r\n// //     setEditedDoctor({\r\n// //       name: '',\r\n// //       qualification: '',\r\n// //       dob: '',\r\n// //       specialization: '',\r\n// //       email: '',\r\n// //       phone: ''\r\n// //     });\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className=\"doctor-management\">\r\n// //       <h2>Doctor Management</h2>\r\n// //       {/* Form to add or edit doctor */}\r\n// //       <form onSubmit={(e) => {\r\n// //         e.preventDefault();\r\n// //         if (editIndex !== null) {\r\n// //           updateDoctor(editIndex, editedDoctor);\r\n// //         } else {\r\n// //           addDoctor(editedDoctor);\r\n// //         }\r\n// //       }}>\r\n// //         <input type=\"text\" name=\"name\" placeholder=\"Name\" required value={editedDoctor.name} onChange={(e) => setEditedDoctor({...editedDoctor, name: e.target.value})} />\r\n// //         <input type=\"text\" name=\"qualification\" placeholder=\"Qualification\" required value={editedDoctor.qualification} onChange={(e) => setEditedDoctor({...editedDoctor, qualification: e.target.value})} />\r\n// //         <input type=\"date\" name=\"dob\" placeholder=\"Date of Birth\" required value={editedDoctor.dob} onChange={(e) => setEditedDoctor({...editedDoctor, dob: e.target.value})} />\r\n// //         <input type=\"text\" name=\"specialization\" placeholder=\"Specialization\" required value={editedDoctor.specialization} onChange={(e) => setEditedDoctor({...editedDoctor, specialization: e.target.value})} />\r\n// //         <input type=\"email\" name=\"email\" placeholder=\"Email\" required value={editedDoctor.email} onChange={(e) => setEditedDoctor({...editedDoctor, email: e.target.value})} />\r\n// //         <input type=\"tel\" name=\"phone\" placeholder=\"Phone\" required value={editedDoctor.phone} onChange={(e) => setEditedDoctor({...editedDoctor, phone: e.target.value})} />\r\n// //         <button type=\"submit\">{editIndex !== null ? 'Update' : 'Add'} Doctor</button>\r\n// //       </form>\r\n// //       {/* List of doctors */}\r\n// //       <table>\r\n// //         <thead>\r\n// //           <tr>\r\n// //             <th>Name</th>\r\n// //             <th>Qualification</th>\r\n// //             <th>DOB</th>\r\n// //             <th>Specialization</th>\r\n// //             <th>Email</th>\r\n// //             <th>Phone</th>\r\n// //             <th>Action</th>\r\n// //           </tr>\r\n// //         </thead>\r\n// //         <tbody>\r\n// //           {doctors.map((doctor, index) => (\r\n// //             <tr key={index}>\r\n// //               <td>{doctor.name}</td>\r\n// //               <td>{doctor.qualification}</td>\r\n// //               <td>{doctor.dob}</td>\r\n// //               <td>{doctor.specialization}</td>\r\n// //               <td>{doctor.email}</td>\r\n// //               <td>{doctor.phone}</td>\r\n// //               <td>\r\n// //                 <button onClick={() => deleteDoctor(index)}>Delete</button>\r\n// //                 <button onClick={() => editDoctor(index)}>Edit</button>\r\n// //               </td>\r\n// //             </tr>\r\n// //           ))}\r\n// //         </tbody>\r\n// //       </table>\r\n// //     </div>\r\n// //   );\r\n// // }\r\n\r\n// // export default DoctorManagement;\r\n// import React, { useState, useEffect } from 'react';\r\n// import './DoctorManagement.css';\r\n// import axios from 'axios';\r\n\r\n// function DoctorManagement() {\r\n//   const [doctors, setDoctors] = useState([]);\r\n//   const [editedDoctor, setEditedDoctor] = useState({\r\n//     name: '',\r\n//     qualification: '',\r\n//     dob: '',\r\n//     specialization: '',\r\n//     email: '',\r\n//     phone: ''\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     fetchDoctors();\r\n//   }, []);\r\n\r\n//   const fetchDoctors = async () => {\r\n//     try {\r\n//       const response = await axios.get('/api/doctors');\r\n//       setDoctors(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching doctors:', error);\r\n//     }\r\n//   };\r\n\r\n//   const addDoctor = async () => {\r\n//     try {\r\n//       const response = await axios.post('/api/doctors', editedDoctor);\r\n//       setDoctors([...doctors, response.data]);\r\n//       setEditedDoctor({\r\n//         name: '',\r\n//         qualification: '',\r\n//         dob: '',\r\n//         specialization: '',\r\n//         email: '',\r\n//         phone: ''\r\n//       });\r\n//     } catch (error) {\r\n//       console.error('Error adding doctor:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     setEditedDoctor({ ...editedDoctor, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"doctor-management\">\r\n//       <h2>Doctor Management</h2>\r\n//       <form onSubmit={(e) => {\r\n//         e.preventDefault();\r\n//         addDoctor();\r\n//       }}>\r\n//         <input type=\"text\" name=\"name\" placeholder=\"Name\" required value={editedDoctor.name} onChange={handleChange} />\r\n//         <input type=\"text\" name=\"qualification\" placeholder=\"Qualification\" required value={editedDoctor.qualification} onChange={handleChange} />\r\n//         <input type=\"date\" name=\"dob\" placeholder=\"Date of Birth\" required value={editedDoctor.dob} onChange={handleChange} />\r\n//         <input type=\"text\" name=\"specialization\" placeholder=\"Specialization\" required value={editedDoctor.specialization} onChange={handleChange} />\r\n//         <input type=\"email\" name=\"email\" placeholder=\"Email\" required value={editedDoctor.email} onChange={handleChange} />\r\n//         <input type=\"tel\" name=\"phone\" placeholder=\"Phone\" required value={editedDoctor.phone} onChange={handleChange} />\r\n//         <button type=\"submit\">Add Doctor</button>\r\n//       </form>\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Qualification</th>\r\n//             <th>DOB</th>\r\n//             <th>Specialization</th>\r\n//             <th>Email</th>\r\n//             <th>Phone</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {doctors.map((doctor, index) => (\r\n//             <tr key={index}>\r\n//               <td>{doctor.name}</td>\r\n//               <td>{doctor.qualification}</td>\r\n//               <td>{doctor.dob}</td>\r\n//               <td>{doctor.specialization}</td>\r\n//               <td>{doctor.email}</td>\r\n//               <td>{doctor.phone}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default DoctorManagement;\r\n// import React, { useState, useEffect } from 'react';\r\n// import './DoctorManagement.css';\r\n// import axios from 'axios';\r\n\r\n// function DoctorManagement() {\r\n//   const [doctors, setDoctors] = useState([]);\r\n//   const [editedDoctor, setEditedDoctor] = useState({\r\n//     name: '',\r\n//     qualification: '',\r\n//     dob: '',\r\n//     specialization: '',\r\n//     email: '',\r\n//     phone: ''\r\n//   });\r\n\r\n//   useEffect(() => {\r\n//     fetchDoctors();\r\n//   }, []);\r\n\r\n//   const fetchDoctors = async () => {\r\n//     try {\r\n//       const response = await axios.get('http://localhost:5000/api/doctors');\r\n//       setDoctors(response.data);\r\n//     } catch (error) {\r\n//       console.error('Error fetching doctors:', error);\r\n//     }\r\n//   };\r\n\r\n//   const addDoctor = async (e) => {\r\n//     try {\r\n//       e.preventDefault(); // Prevent form submission\r\n//       const response = await axios.post('http://localhost:5000/api/doctors', editedDoctor);\r\n//       setDoctors([...doctors, response.data]);\r\n//       setEditedDoctor({\r\n//         name: '',\r\n//         qualification: '',\r\n//         dob: '',\r\n//         specialization: '',\r\n//         email: '',\r\n//         phone: ''\r\n//       });\r\n//     } catch (error) {\r\n//       console.error('Error adding doctor:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleChange = (e) => {\r\n//     setEditedDoctor({ ...editedDoctor, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"doctor-management\">\r\n//       <h2>Doctor Management</h2>\r\n//       <form onSubmit={(e) => addDoctor(e)}>\r\n//         <input type=\"text\" name=\"name\" placeholder=\"Name\" required value={editedDoctor.name} onChange={handleChange} />\r\n//         <input type=\"text\" name=\"qualification\" placeholder=\"Qualification\" required value={editedDoctor.qualification} onChange={handleChange} />\r\n//         <input type=\"date\" name=\"dob\" placeholder=\"Date of Birth\" required value={editedDoctor.dob} onChange={handleChange} />\r\n//         <input type=\"text\" name=\"specialization\" placeholder=\"Specialization\" required value={editedDoctor.specialization} onChange={handleChange} />\r\n//         <input type=\"email\" name=\"email\" placeholder=\"Email\" required value={editedDoctor.email} onChange={handleChange} />\r\n//         <input type=\"tel\" name=\"phone\" placeholder=\"Phone\" required value={editedDoctor.phone} onChange={handleChange} />\r\n//         <button type=\"submit\">Add Doctor</button>\r\n//       </form>\r\n//       <table>\r\n//         <thead>\r\n//           <tr>\r\n//             <th>Name</th>\r\n//             <th>Qualification</th>\r\n//             <th>DOB</th>\r\n//             <th>Specialization</th>\r\n//             <th>Email</th>\r\n//             <th>Phone</th>\r\n//           </tr>\r\n//         </thead>\r\n//         <tbody>\r\n//           {doctors.map((doctor, index) => (\r\n//             <tr key={index}>\r\n//               <td>{doctor.name}</td>\r\n//               <td>{doctor.qualification}</td>\r\n//               <td>{doctor.dob}</td>\r\n//               <td>{doctor.specialization}</td>\r\n//               <td>{doctor.email}</td>\r\n//               <td>{doctor.phone}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default DoctorManagement;\r\nimport React, { useState, useEffect } from 'react';\r\nimport './DoctorManagement.css';\r\nimport axios from 'axios';\r\n\r\nfunction DoctorManagement() {\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [editedDoctor, setEditedDoctor] = useState({\r\n    name: '',\r\n    qualification: '',\r\n    dob: '',\r\n    specialization: '',\r\n    email: '',\r\n    phone: ''\r\n  });\r\n  const [editingIndex, setEditingIndex] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchDoctors();\r\n  }, []);\r\n\r\n  const fetchDoctors = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:5000/api/doctors');\r\n      setDoctors(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching doctors:', error);\r\n    }\r\n  };\r\n\r\n  const addDoctor = async (e) => {\r\n    try {\r\n      e.preventDefault(); // Prevent form submission\r\n      const response = await axios.post('http://localhost:5000/api/doctors', editedDoctor);\r\n      setDoctors([...doctors, response.data]);\r\n      setEditedDoctor({\r\n        name: '',\r\n        qualification: '',\r\n        dob: '',\r\n        specialization: '',\r\n        email: '',\r\n        phone: ''\r\n      });\r\n    } catch (error) {\r\n      console.error('Error adding doctor:', error);\r\n    }\r\n  };\r\n\r\n  const editDoctor = async (index) => {\r\n    try {\r\n      const response = await axios.put(`http://localhost:5000/api/doctors/${doctors[index]._id}`, editedDoctor);\r\n      const updatedDoctors = [...doctors];\r\n      updatedDoctors[index] = response.data;\r\n      setDoctors(updatedDoctors);\r\n      setEditingIndex(null);\r\n      setEditedDoctor({\r\n        name: '',\r\n        qualification: '',\r\n        dob: '',\r\n        specialization: '',\r\n        email: '',\r\n        phone: ''\r\n      });\r\n    } catch (error) {\r\n      console.error('Error editing doctor:', error);\r\n    }\r\n  };\r\n\r\n  const deleteDoctor = async (id) => {\r\n    try {\r\n      await axios.delete(`http://localhost:5000/api/doctors/${id}`);\r\n      const filteredDoctors = doctors.filter((doctor) => doctor._id !== id);\r\n      setDoctors(filteredDoctors);\r\n    } catch (error) {\r\n      console.error('Error deleting doctor:', error);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setEditedDoctor({ ...editedDoctor, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleEditClick = (index) => {\r\n    setEditingIndex(index);\r\n    setEditedDoctor(doctors[index]);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditingIndex(null);\r\n    setEditedDoctor({\r\n      name: '',\r\n      qualification: '',\r\n      dob: '',\r\n      specialization: '',\r\n      email: '',\r\n      phone: ''\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"doctor-management\">\r\n      <h2>Doctor Management</h2>\r\n      <form onSubmit={(e) => addDoctor(e)}>\r\n        <input type=\"text\" name=\"name\" placeholder=\"Name\" required value={editedDoctor.name} onChange={handleChange} />\r\n        <input type=\"text\" name=\"qualification\" placeholder=\"Qualification\" required value={editedDoctor.qualification} onChange={handleChange} />\r\n        <input type=\"date\" name=\"dob\" placeholder=\"Date of Birth\" required value={editedDoctor.dob} onChange={handleChange} />\r\n        <input type=\"text\" name=\"specialization\" placeholder=\"Specialization\" required value={editedDoctor.specialization} onChange={handleChange} />\r\n        <input type=\"email\" name=\"email\" placeholder=\"Email\" required value={editedDoctor.email} onChange={handleChange} />\r\n        <input type=\"tel\" name=\"phone\" placeholder=\"Phone\" required value={editedDoctor.phone} onChange={handleChange} />\r\n        {editingIndex !== null ? (\r\n          <>\r\n            <button type=\"button\" onClick={() => editDoctor(editingIndex)}>Save</button>\r\n            <button type=\"button\" onClick={handleCancelEdit}>Cancel</button>\r\n          </>\r\n        ) : (\r\n          <button type=\"submit\">Add Doctor</button>\r\n        )}\r\n      </form>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>Qualification</th>\r\n            <th>DOB</th>\r\n            <th>Specialization</th>\r\n            <th>Email</th>\r\n            <th>Phone</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {doctors.map((doctor, index) => (\r\n            <tr key={index}>\r\n              <td>{editingIndex === index ? <input type=\"text\" name=\"name\" value={editedDoctor.name} onChange={handleChange} /> : doctor.name}</td>\r\n              <td>{editingIndex === index ? <input type=\"text\" name=\"qualification\" value={editedDoctor.qualification} onChange={handleChange} /> : doctor.qualification}</td>\r\n              <td>{editingIndex === index ? <input type=\"date\" name=\"dob\" value={editedDoctor.dob} onChange={handleChange} /> : doctor.dob}</td>\r\n              <td>{editingIndex === index ? <input type=\"text\" name=\"specialization\" value={editedDoctor.specialization} onChange={handleChange} /> : doctor.specialization}</td>\r\n              <td>{editingIndex === index ? <input type=\"email\" name=\"email\" value={editedDoctor.email} onChange={handleChange} /> : doctor.email}</td>\r\n              <td>{editingIndex === index ? <input type=\"tel\" name=\"phone\" value={editedDoctor.phone} onChange={handleChange} /> : doctor.phone}</td>\r\n              <td>\r\n                {editingIndex === index ? (\r\n                  <>\r\n                    <button onClick={() => editDoctor(index)}>Save</button>\r\n                    <button onClick={handleCancelEdit}>Cancel</button>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <button onClick={() => handleEditClick(index)}>Edit</button>\r\n                    <button onClick={() => deleteDoctor(doctor._id)}>Delete</button>\r\n                  </>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorManagement;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}